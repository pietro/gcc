# Copyright (C) 1997-2024 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GCC; see the file COPYING3.  If not see
# <http://www.gnu.org/licenses/>.

load_lib gcc-dg.exp

# Define ALGOL68 callbacks for dg.exp.

proc algol68-dg-test { prog do_what extra_tool_flags } {
    return [gcc-dg-test-1 algol68_target_compile $prog $do_what $extra_tool_flags]
}

proc algol68-dg-prune { system text } {
    return [gcc-dg-prune $system $text]
}

# Modified dg-runtest that can cycle through a list of optimization options
# as c-torture does.
proc algol68-dg-runtest { testcases flags default-extra-flags } {
    global runtests
    global TORTURE_OPTIONS

    foreach test $testcases {
	# If we're only testing specific files and this isn't one of
	# them, skip it.
	if ![runtest_file_p $runtests $test] {
	    continue
        }

	# look if this is dg-do-run test, in which case
	# we cycle through the option list, otherwise we don't
	if [expr [search_for $test "dg-do run"]] {
	    set option_list $TORTURE_OPTIONS
	} else {
	    set option_list [list { -O2 } ]
	}

	set nshort [file tail [file dirname $test]]/[file tail $test]

	foreach flags_t $option_list {
	    verbose "Testing $nshort, $flags $flags_t" 1
	    dg-test $test "$flags $flags_t" ${default-extra-flags}
	}
    }
}
