# { dg-options "-fstropping=upper" }  #
# Multiple values.  #
multiples:
structures:
BEGIN [1:100]INT i, j, k;
      FOR l TO 100 DO i[l] := j[l] := k[l] := l OD;
      FOR l TO 100
      DO IF i[l] /= l OR j[l] /= l OR k[l] /= l
         THEN ASSERT (FALSE)
         FI
      OD;
      [1:100]REAL p;
      p[1] := 1.0;
      p[1:5] := (2.0, 3.0, 4.0, 5.0, 6.0);
      FOR i FROM 1 TO 5 DO ASSERT (p[i] = REAL(i) + 1.0) OD;
      # Test the @ workings  #
      p[2:6 # Implicit @1 #] := (2.0, 3.0, 4.0, 5.0, 6.0);
      FOR i FROM 2 TO 6 DO ASSERT (p[i] = REAL(i)) OD;
      p[2:3@8] := p[3:4@8];
      ASSERT (UPB p[1:3@9] = 11 AND UPB p[1:0@5] = 4);
      [1:10,1:10] INT l;
      FOR i TO 10 DO FOR j TO 10 DO l[i,j] := 10 OD OD;
      FOR i TO  2 DO FOR j TO 10 DO l[1:2,1:10][i,j] := 11 OD OD;
      FOR i TO 10 DO FOR j TO 10
                     DO IF i >= 1 AND i <= 2
                        THEN ASSERT (l[i,j] = 11)
                        ELSE ASSERT (l[i,j] = 10)
                        FI
                     OD
      OD;
      # Structures.  #
      STRUCT ([1:2] INT m,
              [1:i[5] # Whose value is 5 from above.  #]REAL g,
              BOOL t) s1, s2;
      t OF s1 := t OF s2 := l[1,1] = l[1:1,1:2][1,1];
      ASSERT (t OF s1 AND t OF s2);
      FOR m TO UPB m OF s1
      DO (m OF s1)[m] := ((m OF s2)[3-m] := 50) + 1 OD;
      g OF s1 := (g OF s2)[] := (1.0, 2.0, 3.0, 4.0, 5.0);
      ASSERT ((m OF s1)[1] = 51 AND (m OF s1)[2] = 51);
      # REF STRUCT's  #
      [1:2]REF STRUCT ([]INT m, []REAL g, BOOL t) ss1 := (s1, s2);
      t OF ss1[2] := FALSE;
      ASSERT (t OF s1 = TRUE);
      ASSERT (t OF s2 = FALSE)
END
