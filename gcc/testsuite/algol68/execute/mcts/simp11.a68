# { dg-options "-fstropping=upper" }  #
# Translation decimal number to Roman notation and vice versa  #
BEGIN PROC roman = (INT number) STRING:
      BEGIN INT n := number, STRING result;
            []STRUCT(INT value, STRING r) table =
               ((1000, "M"), (900, "CM"), (500, "D"), (400, "DC"),
                (100, "C"), (90, "XC"), (50, "L"), (40, "XL"),
                (10, "X"), (9, "IX"), (5, "V"), (4, "IV"), (1, "I"));
            FOR i TO UPB table
            DO INT v = value OF table[i], STRING r = r OF table[i];
               WHILE v LE n DO (result +:= r, n -:= v) OD
            OD;
            result
      END;

      PROC value of roman = (STRING text) INT:
      IF text = ""
      THEN 0
      ELSE OP ABS = (CHAR s) INT:
              CASE INT p; char in string (s, p, "IVXLCDM"); p
              IN 1, 5, 10, 50, 100, 500, 1000
              ESAC,
           PROC char in string = (CHAR c, REF INT i, STRING s) BOOL:
              (FOR k TO UPB s DO (c = s[k] | i := k; l) OD; FALSE EXIT l: TRUE);
           INT v, maxv := 0, maxp;
           FOR p TO UPB text
           DO IF (v := ABS text[p]) > maxv
              THEN maxp := p; maxv := v
              FI
           OD;
           maxv - value of roman (text[: maxp-1])+ value of roman (text[maxp + 1:])
      FI;

      ASSERT (roman (1968) = "MCMLXVIII");
      ASSERT (value of roman ("MCMLXXIII") = 1973)
END
