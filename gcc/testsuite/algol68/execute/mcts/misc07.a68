# { dg-options "-fstropping=upper" }  #
# 100 nested proc declarations; prints 100 100 #
(INT i := 0; INT j := (INT a =
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
(PROC a = INT:
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
i+:=1; a);
a);
ASSERT (i = j);
ASSERT (i = 100 AND j = 100)
)
