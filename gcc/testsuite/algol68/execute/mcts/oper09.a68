# { dg-options "-fstropping=upper" }  #
# Monadic operators, non-bold monads.  #
BEGIN INT decls := 0;
      OP    += (INT a) INT: a + 1; decls +:= 1;
      OP   +<= (INT a) INT: a + 1; decls +:= 1;
      OP   +>= (INT a) INT: a + 1; decls +:= 1;
      OP   +/= (INT a) INT: a + 1; decls +:= 1;
      OP   +== (INT a) INT: a + 1; decls +:= 1;
      OP   +*= (INT a) INT: a + 1; decls +:= 1;
      OP  +:== (INT a) INT: a + 1; decls +:= 1;
      OP +<:== (INT a) INT: a + 1; decls +:= 1;
      OP +>:== (INT a) INT: a + 1; decls +:= 1;
      OP +/:== (INT a) INT: a + 1; decls +:= 1;
      OP +=:== (INT a) INT: a + 1; decls +:= 1;
      OP +*:== (INT a) INT: a + 1; decls +:= 1;
      OP  +=:= (INT a) INT: a + 1; decls +:= 1;
      OP +<=:= (INT a) INT: a + 1; decls +:= 1;
      OP +>=:= (INT a) INT: a + 1; decls +:= 1;
      OP +/=:= (INT a) INT: a + 1; decls +:= 1;
      OP +==:= (INT a) INT: a + 1; decls +:= 1;
      OP +*=:= (INT a) INT: a + 1; decls +:= 1;

      OP    -= (INT a) INT: a + 1; decls +:= 1;
      OP   -<= (INT a) INT: a + 1; decls +:= 1;
      OP   ->= (INT a) INT: a + 1; decls +:= 1;
      OP   -/= (INT a) INT: a + 1; decls +:= 1;
      OP   -== (INT a) INT: a + 1; decls +:= 1;
      OP   -*= (INT a) INT: a + 1; decls +:= 1;
      OP  -:== (INT a) INT: a + 1; decls +:= 1;
      OP -<:== (INT a) INT: a + 1; decls +:= 1;
      OP ->:== (INT a) INT: a + 1; decls +:= 1;
      OP -/:== (INT a) INT: a + 1; decls +:= 1;
      OP -=:== (INT a) INT: a + 1; decls +:= 1;
      OP -*:== (INT a) INT: a + 1; decls +:= 1;
      OP  -=:= (INT a) INT: a + 1; decls +:= 1;
      OP -<=:= (INT a) INT: a + 1; decls +:= 1;
      OP ->=:= (INT a) INT: a + 1; decls +:= 1;
      OP -/=:= (INT a) INT: a + 1; decls +:= 1;
      OP -==:= (INT a) INT: a + 1; decls +:= 1;
      OP -*=:= (INT a) INT: a + 1; decls +:= 1;

      OP    %= (INT a) INT: a + 1; decls +:= 1;
      OP   %<= (INT a) INT: a + 1; decls +:= 1;
      OP   %>= (INT a) INT: a + 1; decls +:= 1;
      OP   %/= (INT a) INT: a + 1; decls +:= 1;
      OP   %== (INT a) INT: a + 1; decls +:= 1;
      OP   %*= (INT a) INT: a + 1; decls +:= 1;
      OP  %:== (INT a) INT: a + 1; decls +:= 1;
      OP %<:== (INT a) INT: a + 1; decls +:= 1;
      OP %>:== (INT a) INT: a + 1; decls +:= 1;
      OP %/:== (INT a) INT: a + 1; decls +:= 1;
      OP %=:== (INT a) INT: a + 1; decls +:= 1;
      OP %*:== (INT a) INT: a + 1; decls +:= 1;
      OP  %=:= (INT a) INT: a + 1; decls +:= 1;
      OP %<=:= (INT a) INT: a + 1; decls +:= 1;
      OP %>=:= (INT a) INT: a + 1; decls +:= 1;
      OP %/=:= (INT a) INT: a + 1; decls +:= 1;
      OP %==:= (INT a) INT: a + 1; decls +:= 1;
      OP %*=:= (INT a) INT: a + 1; decls +:= 1;

      ASSERT (++<+>+/+=+*+:=+<:=+>:=+/:=+=:=+*:=+=:+<=:+>=:+/=:+==:+*=:
              --<->-/-=-*-:=-<:=->:=-/:=-=:=-*:=-=:-<=:->=:-/=:-==:-*=:
              %%<%>%/%=%*%:=%<:=%>:=%/:=%=:=%*:=%=:%<=:%>=:%/=:%==:%*=: 0 = decls)
END

